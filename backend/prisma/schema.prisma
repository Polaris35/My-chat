generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int            @id @default(autoincrement())
  createdAt     DateTime       @default(now()) @map("created_at")
  email         String         @unique
  image         String
  name          String
  password      String?
  provider      Provider
  conversations Conversation[]
  messages      Message[]
  participants  Participant[]
  Token         Token[]

  @@map("users")
}

model Token {
  token     String   @unique
  exp       DateTime
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int      @map("user_id")
  userAgent String   @map("user_agent")

  @@map("tokens")
}

model Conversation {
  id           Int           @id @default(autoincrement())
  createdAt    DateTime      @default(now()) @map("created_at")
  title        String
  idCreator    Int           @map("id_creator")
  avatarUrl    Int[]         @map("avatar_url")
  author       User          @relation(fields: [idCreator], references: [id])
  messages     Message[]
  participants Participant[]

  @@map("conversations")
}

model Participant {
  id             Int          @id @default(autoincrement())
  idUser         Int          @map("id_user")
  idConversation Int          @map("id_conversation")
  dialog         Conversation @relation(fields: [idConversation], references: [id])
  member         User         @relation(fields: [idUser], references: [id])

  @@map("participants")
}

model Message {
  id                 Int          @id @default(autoincrement())
  idSender           Int          @map("id_sender")
  idConversation     Int          @map("id_conversation")
  message            String       @db.VarChar(255)
  type               MessageType  @default(standaloneMessage)
  referenceMessageId Int          @map("reference_message_id")
  attachmentList     Int[]        @map("attachment_list")
  createdAt          DateTime
  deletedAt          DateTime
  conversation       Conversation @relation(fields: [idConversation], references: [id])
  sender             User         @relation(fields: [idSender], references: [id])

  @@map("messages")
}

model MessageReadHistory {
  id        Int @id @default(autoincrement())
  idMessage Int @map("id_message")
  idUser    Int @map("id_user")

  @@map("message_read_history")
}

model Attachment {
  id   Int    @id @default(autoincrement())
  url  String
  type String

  @@map("attachments")
}

enum Provider {
  discord
  google
  credentials
}

enum MessageType {
  standaloneMessage @map("standalone_message")
  sharedMessage     @map("shared_message")
  answeredMessage   @map("answered_message")

  @@map("message_type")
}
