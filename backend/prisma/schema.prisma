generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int            @id @default(autoincrement())
  createdAt     DateTime       @default(now()) @map("created_at")
  email         String         @unique
  image         String
  name          String
  password      String?
  provider      Provider
  conversations Conversation[]
  participants  Participant[]
  Token         Token[]
  Message       Message[]

  @@map("users")
}

model Token {
  token     String   @unique
  exp       DateTime
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int      @map("user_id")
  userAgent String   @map("user_agent")

  @@map("tokens")
}

model Conversation {
  id           Int              @id @default(autoincrement())
  createdAt    DateTime         @default(now()) @map("created_at")
  title        String
  creatorId    Int              @map("creator_id")
  avatarUrl    Int[]            @map("avatar_url")
  type         ConversationType @default(PRIVATE)
  author       User             @relation(fields: [creatorId], references: [id])
  participants Participant[]
  Message      Message[]

  @@map("conversations")
}

model Participant {
  userId         Int             @map("user_id")
  conversationId Int             @map("conversation_id")
  role           ParticipantRole @default(USER)
  dialog         Conversation    @relation(fields: [conversationId], references: [id])
  member         User            @relation(fields: [userId], references: [id])

  @@id([userId, conversationId])
  @@map("participants")
}

model Message {
  id                 Int         @id @default(autoincrement())
  message            String      @db.VarChar(255)
  type               MessageType @default(STANDALONE_MESSAGE)
  referenceMessageId Int?        @default(-1) @map("reference_message_id")
  attachmentList     Int[]       @map("attachment_list")
  createdAt          DateTime    @default(now()) @map("created_at")
  isDeleted          Boolean     @default(false) @map("is_deleted")

  conversation   Conversation @relation(fields: [conversationId], references: [id])
  sender         User         @relation(fields: [senderId], references: [id])
  senderId       Int          @map("sender_id")
  conversationId Int          @map("conversation_id")

  @@map("messages")
}

model MessageReadHistory {
  messageId     Int @map("message_id")
  participantId Int @map("participant_id")

  @@id([messageId, participantId])
  @@map("message_read_history")
}

model Attachment {
  id   Int    @id @default(autoincrement())
  url  String
  type String

  @@map("attachments")
}

enum Provider {
  DISCORD
  GOOGLE
  CREDENTIALS
}

enum MessageType {
  STANDALONE_MESSAGE
  SHARED_MESSAGE
  ANSWERED_MESSAGE
  SYSTEM_MESSAGE

  @@map("message_type")
}

enum ParticipantRole {
  USER
  MODERATOR
  ADMIN

  @@map("participant_role")
}

enum ConversationType {
  PRIVATE
  GROUP
}
